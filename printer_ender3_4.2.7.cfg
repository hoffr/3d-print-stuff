# MUST USE ANSI ENCODING




# This file contains pin mappings for the Creality "v4.2.7" board. To
# use this config, during "make menuconfig" select the STM32F103 with
# a "28KiB bootloader" and serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[gcode_macro SET_Z_OFFSET]
gcode:
    # SET_GCODE_OFFSET Z=0.960 MOVE=0
    SET_GCODE_OFFSET Z=1.320 MOVE=0

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.04 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.04 MOVE=1

[gcode_macro PID_EXTRUDER]
gcode:
    # end user instructions, not automated for you:
    # put nozzle about 5mm above bed, hanging right off bed so can extrude freely
    # close up printer enclosure
    # set part fan to 50, bed to 40, extruder to 185
    # begin to extrude 100mm at 0.66mm/s
    # begin calibration:
    PID_CALIBRATE HEATER=extruder TARGET=235

[gcode_macro PID_BED]
gcode:
    # end user instructions, not automated for you:
    # move nozzle x/y dead center of bed but then maybe 10 percent closer toward any 'cool' areas such as exposed enclosure opening
    # nozzle should be maybe 10mm above bed
    # close up printer enclosure
    # set part fan to 25, bed to 40 and wait for decent plateau so print surface heats well, don't heat extruder
    # begin calibration:
    PID_CALIBRATE HEATER=heater_bed TARGET=80

[gcode_macro BEEP_START________DISABLED]
gcode:
    M300 P200 S1000
    M300 P200 S1500
    M300 P200 S2500
    M300 P200 S2000
    M300 P200 S1000
    M300 P200 S1500
    M300 P200 S2500
    M300 P200 S2000
    M300 P200 S1000
    M300 P200 S1500
    M300 P200 S2500
    M300 P200 S2000

[gcode_macro BEEP_END________DISABLED]
gcode:
    M300 P400 S1500
    M300 P333 S1355
    M300 P200 S1270
    M300 P333 S1355
    M300 P200 S1270
    M300 P666 S1000
    M300 P50 S2500
    M300 P50 S2000
    M300 P50 S2250
    M300 P50 S2500
    M300 P50 S2000
    M300 P400 S1500
    M300 P333 S1355
    M300 P200 S1270
    M300 P333 S1355
    M300 P200 S1270
    M300 P666 S1000
    M300 P50 S2500
    M300 P50 S2000
    M300 P50 S2250
    M300 P50 S2500
    M300 P50 S2000
    M300 P400 S1500
    M300 P333 S1355
    M300 P200 S1270
    M300 P333 S1355
    M300 P200 S1270
    M300 P666 S1000
    M300 P50 S2500
    M300 P50 S2000
    M300 P50 S2250
    M300 P50 S2500
    M300 P50 S2000

[gcode_macro BEEP_START]
gcode:
    M300 P100 S2000
    M300 P100 S1000

[gcode_macro BEEP_END]
gcode:
    M300 P50 S1500
    M300 P50 S2000

# M300 : Play tone. Beeper support, as commonly found on usual LCD
# displays (i.e. RepRapDiscount 2004 Smart Controller, RepRapDiscount
# 12864 Full Graphic). This defines a custom I/O pin and a custom
# GCODE macro.  Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.
[output_pin BEEPER_pin]
pin: PC6
#   Beeper pin. This parameter must be provided.
#   ar37 is the default RAMPS/MKS pin.
pwm: True
#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
#   Although not pitch perfect.

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0








[board_pins]
aliases:
  EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
  EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
  PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    G91 ;Relative positioning
    G1 E-2 F2700 ;Retract a bit
    G1 E-2 Z0.2 F2400 ;Retract and raise Z
    G1 X20 Y20 F3000 ;Wipe out
    G1 Z10 ;Raise Z more
    G90 ;Absolute positioning

    ;Present print to a spot that isn't printed often so roller flattening isn't a big deal lol
    G1 X51 Y176
    
    M140 S0 ;Turn-off bed

    M84 X Y E ;Disable all steppers but Z















[stepper_x]

# different from ender3pro-2020 (4.2.2)
step_pin: PB9
dir_pin: PC2

enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_y]

# different from ender3pro-2020 (4.2.2)
step_pin: PB7
dir_pin: PB8

enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 0
position_max: 235
homing_speed: 50

[stepper_z]

# different from ender3pro-2020 (4.2.2)
step_pin: PB5
dir_pin: !PB6

enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: ^PA7
position_endstop: 0.0
position_max: 250
homing_speed: 5

[extruder]
max_extrude_only_distance: 200.0

# different from ender3pro-2020 (4.2.2)
step_pin: PB3
dir_pin: PB4

enable_pin: !PC3
microsteps: 16

# different from ender3pro-2020 (4.2.2)
#rotation_distance: 33.500

# for my metal extruder
# PLA 
# rotation_distance: 19.628

# PETG
rotation_distance: 22.982


nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
control: pid

pid_Kp=29.640
pid_Ki=1.392
pid_Kd=157.832

min_temp: 0
max_temp: 300

# pressure_advance = 0.0575
pressure_advance = 0.0700
pressure_advance_smooth_time: 0.050

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid

# default
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182

# mine, nozzle centered but then bed 10 percent closer to enclosure opening, nozzle 10mm above bed, part fan 25 percent, enclosure closed, bed plateau at 40c
pid_Kp: 71.059
pid_Ki: 1.645
pid_Kd: 767.437

min_temp: 0
max_temp: 130

#[input_shaper]
#shaper_freq_x: 49.5
#shaper_freq_y: 45
#shaper_type: mzv

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300

# to configure input shaper:
# SET_PRESSURE_ADVANCE ADVANCE=0
# SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0
# TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=ACCEL START=1250 FACTOR=100 BAND=5
# print L shaped XY model

# to configure pressure advance:
# SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
# (for direct drive) TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005
# (bowden) TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.020
# print square model


max_accel_to_decel: 1000
max_accel: 1000
square_corner_velocity: 5

max_z_velocity: 10
max_z_accel: 100

# taken from ender3pro-2020 (4.2.2), not included with generic-creality-v4.2.7
# matches this guy's 4.2.7 cfg: https://github.com/pcdiks/3d-printing/blob/master/klipper/printer.cfg
# not sure if this is correct, he had it commented it out
# Pin mappings for BL_T port
#[bltouch]
#sensor_pin: ^PB1
#control_pin: PB0

# taken from ender3pro-2020 (4.2.2), not included with generic-creality-v4.2.7
# matches this guy's 4.2.7 cfg: https://github.com/pcdiks/3d-printing/blob/master/klipper/printer.cfg
[display]
lcd_type: st7920
cs_pin: PB12
sclk_pin: PB13
sid_pin: PB15
encoder_pins: ^PB14, ^PB10
click_pin: ^!PB2

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[idle_timeout]
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 900
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.
